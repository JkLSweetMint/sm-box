{
    "info": {
        "name": "Authentication service",
        "description": "",
        "version": "",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Системные запросы. ",
            "item": [
                {
                    "name": "Ping-pong запрос. ",
                    "request": {
                        "url": {
                            "raw": "",
                            "protocol": "https",
                            "host": [
                                "box",
                                "samgk",
                                "ru"
                            ],
                            "path": [
                                "",
                                "authentication-api",
                                "v1.0",
                                "sys",
                                "ping"
                            ]
                        },
                        "method": "GET",
                        "description": "\nЗапрос /ping в HTTP используется для проверки работоспособности сервера. Этот запрос очень простой и обычно состоит из \nодной строки, содержащей только слово \"ping\". Сервер, получив такой запрос, должен ответить сообщением об успешной \nобработке запроса.\n\nЗачем это нужно? Во-первых, такие запросы используются при тестировании сети, чтобы убедиться, что сервер доступен и \nработает корректно. Во-вторых, они могут использоваться в клиентском программном обеспечении для периодической проверки\nсостояния соединения с сервером. Например, если клиент долгое время не получает ответов от сервера, он может отправить\nзапрос /ping, чтобы понять, не отключился ли сервер.\n\nВажно отметить, что запрос /ping является информационным и не требует никаких данных от клиента. Это означает, что он \nне занимает много времени и ресурсов сервера, поэтому его можно использовать достаточно часто без риска перегрузки \nсистемы.",
                        "body": {
                            "mode": "raw",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "body": "\n{\n    \"code\": 200,\n    \"code_message\": \"OK\",\n    \"status\": \"success\",\n    \"data\": {\n        \"message\": \"pong\"\n    }\n}\n",
                            "status": "È",
                            "code": 200,
                            "name": "Успешный ответ. "
                        }
                    ]
                },
                {
                    "name": "Используется для проверки работоспособности сервера. ",
                    "request": {
                        "url": {
                            "raw": "",
                            "protocol": "https",
                            "host": [
                                "box",
                                "samgk",
                                "ru"
                            ],
                            "path": [
                                "",
                                "authentication-api",
                                "v1.0",
                                "sys",
                                "health"
                            ]
                        },
                        "method": "GET",
                        "description": "\nЗапрос /health в HTTP также используется для проверки работоспособности сервера, но в отличие от /ping, он \nпредоставляет более подробную информацию о состоянии сервера. \n\nЭтот запрос обычно возвращает JSON-объект, который содержит различные метрики, связанные с работой сервера, такие как\nверсия ПО, список активных подключений, информация о нагрузке на процессор и память, а также другие важные параметры.\n\nЗачем это нужно? Во-первых, такие запросы используются при развертывании новых версий ПО, чтобы убедиться, что все \nкомпоненты системы работают корректно. Во-вторых, они могут использоваться в системах мониторинга для автоматического \nобнаружения проблем в работе сервера.\n\nВажно отметить, что запрос /health является информационным и не требует никаких действий со стороны клиента. Это \nозначает, что он не занимает много времени и ресурсов сервера, поэтому его можно использовать достаточно часто без \nриска перегрузки системы.",
                        "body": {
                            "mode": "raw",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "body": "\n{\n    \"code\": 200,\n    \"code_message\": \"OK\",\n    \"status\": \"success\",\n    \"data\": {\n        \"system_name\": \"box\",\n        \"mode\": \"DEV\",\n        \"version\": \"24.0.16\",\n        \"os\": \"windows - amd64\",\n        \"launch_time\": \"2024-06-10T07:58:55.981117Z\",\n        \"up_time\": \"5.2450825s\"\n    }\n}\n",
                            "status": "È",
                            "code": 200,
                            "name": "Пример ответа. "
                        }
                    ]
                },
                {
                    "name": "Используется для получения примера ошибки для возможности обработки клиентом. ",
                    "request": {
                        "url": {
                            "raw": "",
                            "protocol": "https",
                            "host": [
                                "box",
                                "samgk",
                                "ru"
                            ],
                            "path": [
                                "",
                                "authentication-api",
                                "v1.0",
                                "sys",
                                "error"
                            ]
                        },
                        "method": "GET",
                        "description": "\nЗапрос /error в HTTP используется для получения примера ошибки для возможности обработки клиентом.\n\nВажно отметить, что запрос /error является информационным и не требует никаких действий со стороны клиента. Это \nозначает, что он не занимает много времени и ресурсов сервера, поэтому его можно использовать достаточно часто без \nриска перегрузки системы.\n",
                        "body": {
                            "mode": "raw",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        }
                    },
                    "response": [
                        {
                            "body": "\n{\n    \"code\": 500,\n    \"code_message\": \"Internal Server Error\",\n    \"status\": \"error\",\n    \"error\": {\n        \"id\": \"I-000000\",\n        \"type\": \"unknown\",\n        \"status\": \"unknown\",\n        \"message\": \"Unknown error. \",\n        \"details\": {\n            \"key\": \"value\"\n        }\n    }\n}\n",
                            "status": "Ǵ",
                            "code": 500,
                            "name": "Пример возврата ошибки. "
                        }
                    ]
                }
            ]
        },
        {
            "name": "Запрос для базовой авторизации пользователя. ",
            "request": {
                "url": {
                    "raw": "",
                    "protocol": "https",
                    "host": [
                        "box",
                        "samgk",
                        "ru"
                    ],
                    "path": [
                        "",
                        "authentication-api",
                        "v1.0",
                        "basic-auth"
                    ]
                },
                "method": "POST",
                "description": "\nИспользуется для аутентификации пользователя по логину и паролю. Этот запрос принимает два параметра: username \n(имя пользователя) и password (пароль). Сервер проверяет предоставленные учетные данные и, если они верны, авторизирует\nтокен хранящийся в Cookie, который затем будет использован для выполнения других операций в системе.\n",
                "body": {
                    "mode": "raw",
                    "raw": "\n{\n   \"username\": \"\",\n   \"password\": \"\"\n}\n",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                }
            },
            "response": [
                {
                    "body": "\n{\n    \"code\": 500,\n    \"code_message\": \"Internal Server Error\",\n    \"status\": \"error\",\n    \"error\": {\n        \"id\": \"I-000001\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"Internal server error. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ǵ",
                    "code": 500,
                    "name": "Произошла внутренняя ошибка сервера. "
                },
                {
                    "body": "\n{\n    \"code\": 200,\n    \"code_message\": \"OK\",\n    \"status\": \"success\"\n}\n",
                    "status": "È",
                    "code": 200,
                    "name": "Пример успешного ответа. "
                },
                {
                    "body": "\n{\n    \"code\": 404,\n    \"code_message\": \"Not Found\",\n    \"status\": \"failed\",\n    \"error\": {\n        \"id\": \"E-000004\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"The user was not found. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ɣ",
                    "code": 404,
                    "name": "Пример ответа если пользователь не найден. "
                },
                {
                    "body": "\n{\n    \"code\": 400,\n    \"code_message\": \"Bad Request\",\n    \"status\": \"failed\",\n    \"error\": {\n        \"id\": \"ERA-000002\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"The request body data could not be read. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ɛ",
                    "code": 400,
                    "name": "Пример ответа при не корректном запросе. "
                }
            ]
        },
        {
            "name": "Получение списка проектов пользователя для выбора после авторизации. ",
            "request": {
                "url": {
                    "raw": "",
                    "protocol": "https",
                    "host": [
                        "box",
                        "samgk",
                        "ru"
                    ],
                    "path": [
                        "",
                        "authentication-api",
                        "v1.0",
                        "projects",
                        "select"
                    ]
                },
                "method": "GET",
                "description": "\nИспользуется для получение списка проектов пользователя для выбора после авторизации. \nПосле выбора проекта пользователю будут доступны методы управления проектом.\n",
                "body": {
                    "mode": "raw",
                    "raw": "\n{\n   \"username\": \"\",\n   \"password\": \"\"\n}\n",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                }
            },
            "response": [
                {
                    "body": "\n{\n    \"code\": 500,\n    \"code_message\": \"Internal Server Error\",\n    \"status\": \"error\",\n    \"error\": {\n        \"id\": \"I-000001\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"Internal server error. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ǵ",
                    "code": 500,
                    "name": "Произошла внутренняя ошибка сервера. "
                },
                {
                    "body": "\n{\n    \"code\": 200,\n    \"code_message\": \"OK\",\n    \"status\": \"success\",\n    \"data\": {\n        \"projects\": [\n            {\n                \"id\": 1,\n                \"name\": \"System\",\n                \"version\": \"\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Test\",\n                \"version\": \"\"\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Test 2\",\n                \"version\": \"v2.0\"\n            }\n        ]\n    }\n}\n",
                    "status": "È",
                    "code": 200,
                    "name": "Пример успешного ответа. "
                },
                {
                    "body": "\n{\n    \"code\": 200,\n    \"code_message\": \"OK\",\n    \"status\": \"success\",\n    \"data\": {\n        \"projects\": []\n    }\n}\n",
                    "status": "È",
                    "code": 200,
                    "name": "Пример успешного ответа, но с отсутствием проектов. "
                },
                {
                    "body": "\n{\n    \"code\": 400,\n    \"code_message\": \"Bad Request\",\n    \"status\": \"failed\",\n    \"error\": {\n        \"id\": \"E-000007\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"The project has already been selected, it is not possible to re-select it. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ɛ",
                    "code": 400,
                    "name": "Ошибка если проект уже выбран. "
                }
            ]
        },
        {
            "name": "Выбрать проект пользователя для дальнейше работы после авторизации. ",
            "request": {
                "url": {
                    "raw": "",
                    "protocol": "https",
                    "host": [
                        "box",
                        "samgk",
                        "ru"
                    ],
                    "path": [
                        "",
                        "authentication-api",
                        "v1.0",
                        "projects",
                        "set"
                    ]
                },
                "method": "POST",
                "description": "",
                "body": {
                    "mode": "raw",
                    "raw": "\n{\n   \"project_id\": 0\n}\n",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                }
            },
            "response": [
                {
                    "body": "\n{\n    \"code\": 500,\n    \"code_message\": \"Internal Server Error\",\n    \"status\": \"error\",\n    \"error\": {\n        \"id\": \"I-000001\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"Internal server error. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ǵ",
                    "code": 500,
                    "name": "Произошла внутренняя ошибка сервера. "
                },
                {
                    "body": "\n{\n    \"code\": 200,\n    \"code_message\": \"OK\",\n    \"status\": \"success\",\n    \"data\": {}\n}\n",
                    "status": "È",
                    "code": 200,
                    "name": "Пример успешного ответа. "
                },
                {
                    "body": "\n{\n    \"code\": 400,\n    \"code_message\": \"Bad Request\",\n    \"status\": \"failed\",\n    \"error\": {\n        \"id\": \"E-000007\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"The project has already been selected, it is not possible to re-select it. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ɛ",
                    "code": 400,
                    "name": "Ошибка если проект уже выбран. "
                },
                {
                    "body": "\n{\n    \"code\": 400,\n    \"code_message\": \"Bad Request\",\n    \"status\": \"failed\",\n    \"error\": {\n        \"id\": \"E-000009\",\n        \"type\": \"system\",\n        \"status\": \"error\",\n        \"message\": \"There is no access to the project. \",\n        \"details\": {}\n    }\n}\n",
                    "status": "Ɛ",
                    "code": 400,
                    "name": "Ошибка если нет доступа к проекту. "
                }
            ]
        }
    ]
}