services:
  postgres:
    image: postgres:16.3
    container_name: postgres
    restart: unless-stopped
#    attach: false
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "3bxMue16ztXPR635"
      TZ: 'GMT-4'
      PGTZ: 'GMT-4'
    volumes:
      - ./system/databases/postgres:/var/lib/postgresql/data
      - ./src/migrations/:/docker-entrypoint-initdb.d/
      - ./var/logs/databases/postgres:/var/log/postgresql
    ports:
      - "9000:5432"
    networks:
      - system
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5

  app:
#    build:
#      context: .
#      dockerfile: Dockerfile.app
    image: box/app:latest
    container_name: app
    restart: unless-stopped
#    attach: false
    depends_on:
      authentication-service:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - system
    volumes:
      - ./etc:/home/app/etc
      - ./src:/home/app/src
      - ./system:/home/app/system
      - ./var/data:/home/app/var/data
      - ./var/lib:/home/app/var/lib
      - ./var/logs:/home/app/var/logs
      - ./var/test:/home/app/var/test

  authentication-service:
#    build:
#      context: .
#      dockerfile: Dockerfile.authentication-service
    image: box/authentication-service:latest
    container_name: authentication-service
    restart: unless-stopped
#    attach: false
    depends_on:
      postgres:
        condition: service_healthy
      authentication-redis:
        condition: service_healthy
    networks:
      - system
    volumes:
      - ./etc:/home/app/etc
      - ./src:/home/app/src
      - ./system:/home/app/system
      - ./var/data:/home/app/var/data
      - ./var/lib:/home/app/var/lib
      - ./var/logs:/home/app/var/logs
      - ./var/test:/home/app/var/test

  authentication-redis:
    image: redis:7.2.5
    container_name: authentication-redis
    restart: unless-stopped
    #    attach: false
    environment:
      REDIS_PASSWORD: "76&D&IEa&YL)284d"
      REDIS_USER: "root"
      REDIS_USER_PASSWORD: "T4b4g9)53(W)l(SM"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./system/databases/authentication-redis/data:/var/lib/redis
      - ./system/databases/authentication-redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./var/logs/databases/authentication-redis:/var/log/redis
    ports:
      - "9001:6379"
    networks:
      - system
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5

  i18n-service:
#    build:
#      context: .
#      dockerfile: Dockerfile.i18n-service
    image: box/i18n-service:latest
    container_name: i18n-service
    restart: unless-stopped
#    attach: false
    depends_on:
      authentication-service:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - system
    volumes:
      - ./etc:/home/app/etc
      - ./src:/home/app/src
      - ./system:/home/app/system
      - ./var/data:/home/app/var/data
      - ./var/lib:/home/app/var/lib
      - ./var/logs:/home/app/var/logs
      - ./var/test:/home/app/var/test

  users-service:
#    build:
#      context: .
#      dockerfile: Dockerfile.users-service
    image: box/users-service:latest
    container_name: users-service
    restart: unless-stopped
#    attach: false
    depends_on:
      authentication-service:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - system
    volumes:
      - ./etc:/home/app/etc
      - ./src:/home/app/src
      - ./system:/home/app/system
      - ./var/data:/home/app/var/data
      - ./var/lib:/home/app/var/lib
      - ./var/logs:/home/app/var/logs
      - ./var/test:/home/app/var/test

  url_shortner-service:
    build:
        context: .
        dockerfile: Dockerfile.url_shortner-service
    image: box/url_shortner-service:latest
    container_name: url_shortner-service
    restart: unless-stopped
    #    attach: false
    depends_on:
      postgres:
        condition: service_healthy
      url_shortner-redis:
        condition: service_healthy
      authentication-service:
        condition: service_started
    networks:
      - system
    ports:
      - 30001:9001
    volumes:
      - ./etc:/home/app/etc
      - ./src:/home/app/src
      - ./system:/home/app/system
      - ./var/data:/home/app/var/data
      - ./var/lib:/home/app/var/lib
      - ./var/logs:/home/app/var/logs
      - ./var/test:/home/app/var/test

  url_shortner-redis:
    image: redis:7.2.5
    container_name: url_shortner-redis
    restart: unless-stopped
    #    attach: false
    environment:
      REDIS_PASSWORD: "4ZTrZ7YDDh5E6s36"
      REDIS_USER: "root"
      REDIS_USER_PASSWORD: "d36fcp8J9T51hyPY"
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./system/databases/url_shortner-redis/data:/var/lib/redis
      - ./system/databases/url_shortner-redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./var/logs/databases/url_shortner-redis:/var/log/redis
    ports:
      - "9002:6379"
    networks:
      - system
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 5

  resources-service:
#    build:
#      context: .
#      dockerfile: Dockerfile.resources-service
    image: box/resources-service:latest
    container_name: resources-service
    restart: unless-stopped
    #    attach: false
    depends_on:
      authentication-service:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - system
    volumes:
      - ./etc:/home/app/etc
      - ./src:/home/app/src
      - ./system:/home/app/system
      - ./var/data:/home/app/var/data
      - ./var/lib:/home/app/var/lib
      - ./var/logs:/home/app/var/logs
      - ./var/test:/home/app/var/test

  dashboard:
#    build:
#      context: .
#      dockerfile: Dockerfile.dashboard
    image: box/dashboard:latest
    container_name: dashboard
    restart: unless-stopped
    environment:
      PORT: 5173
      ORIGIN: http://dashboard:5173
    depends_on:
      - app
      - i18n-service
      - authentication-service
      - users-service
    networks:
      - system

  nginx:
    image: nginx:1.27.0
    container_name: nginx
    restart: unless-stopped
#    attach: false
    depends_on:
      - app
      - i18n-service
      - authentication-service
      - users-service
      - dashboard
      - url_shortner-service
      - resources-service
    networks:
      - system
    volumes:
      - type: bind
        source: ./system/nginx
        target: /etc/nginx
        consistency: cached
      - type: bind
        source: ./var/logs/nginx
        target: /var/log/nginx
        consistency: cachedx
    ports:
      - "80:80"
      - "443:443"

networks:
  system:
    driver: bridge